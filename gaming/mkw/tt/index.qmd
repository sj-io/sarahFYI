---
title: "time trials"
format: 
  dashboard:
    orientation: columns
---

```{r}
library(tidyr)
library(dplyr)
library(stringr)
library(lubridate)

raw_fp <- Sys.getenv("MKW_TT_FILE")

add_label <- function(track, date, time, character, kart, player = NULL) {
  l <- str_glue("<b>track:</b> {track}<br><b>date:</b> {date}<br><b>time:</b> {time}<br><b>character:</b> {character}<br><b>kart:</b> {kart}")
  if (!is.null(player)) {
    l <- str_glue("{l}<br><b>player:</b> {player}")
  }
  l
}

raw_tt <- readr::read_csv(raw_fp, col_types = list(.default = "character")) |> 
  janitor::remove_empty("rows")

fill_tt <- colnames(raw_tt) |> str_subset("time", negate = TRUE)

tt <- raw_tt |> 
  fill(all_of(fill_tt)) |>
  mutate(outfit = str_glue("({outfit})")) |> 
  unite(date, c("date", "time"), sep = " ") |>
  unite(character, c("character", "outfit"), sep = " ") |>
  rename(time = race_time) |> 
  mutate(date = ymd_hm(date, tz = "America/New_York"),
         time = ms(time),
         label = add_label(track, date, time, character, kart))

```

```{r}
library(rvest)

raw_wr <- read_html("https://www.mkwrs.com/mkworld/") |> 
  html_elements(".wr") |> 
  html_table() |> 
  purrr::pluck(1)

wr <- raw_wr |> 
  janitor::clean_names() |> 
  select(track, time = time_video, player, date, character, kart = vehicle) |> 
  filter(track != "Total:") |> 
  mutate(
    across(where(is.character), str_to_lower),
    time = str_replace_all(time, c("'" = ":", "\"" = ".")) |> ms(),
    track = str_remove_all(track, "['\\.\\?]") |> str_replace_all("-", " ") |> str_squish(),
    label = add_label(track, date, time, character, kart, player))
```

```{r}
all_tt <- tt |> 
  left_join(wr, by = "track", suffix = c("_pr", "_wr")) |> 
  mutate(diff = seconds_to_period(period_to_seconds(time_pr) - period_to_seconds(time_wr)) |> round(3),
         date_pr = as_date(date_pr)) |> 
  arrange(diff)

best_tt <- all_tt |> 
  slice_min(time_pr, n = 1, by = "track")

not_run <- wr |> anti_join(tt |> select(track), by = "track")

most_recent <- tt |> 
  slice_min(time, by = "track") |> 
  slice_max(order_by = date)
  # pull(date)
```

## col 1

::: {.card title="personal bests"}
```{r}
library(reactable)

options(reactable.theme = reactableTheme(
  color = "#D2DDF9",
  backgroundColor = "#0c2461",
  borderColor = "#0c2461",
  stripedColor = "#113388",
  highlightColor = "darkgoldenrod",
  style = list(fontSize = "11px"),
  searchInputStyle = list(
    width = "100%", 
    borderRadius = "0px",
    backgroundColor = "#4976E9", 
    fontColor = "#D2DDF9",
    "::placeholder" = list(color = "#0c2461"))
))

pb_tbl <- best_tt |> 
  select(track, starts_with("date"), starts_with("time"), diff) |> 
  mutate(across(starts_with("time"), as.character))
reactable(pb_tbl,
  striped = TRUE, highlight = TRUE, wrap = FALSE,
  defaultSortOrder = "desc", defaultSorted = "diff", compact = TRUE,
  )
```
:::

::: {.card title="no recorded times"}
```{r}
reactable(not_run |> select(-label) |> mutate(time = as.character(time)),
  striped = TRUE, highlight = TRUE, wrap = FALSE,
  defaultSortOrder = "desc", compact = TRUE,
  pagination = FALSE
  )
```

:::

## col 2 {width="45%"}

```{r}
#| title: WR comparison
library(ggplot2)
library(emojifont)
library(plotly)

all_tt_sec <- all_tt |> 
  mutate(across(starts_with("time"), ~ period_to_seconds(.))) |> 
  mutate(sd = sd(time_pr), .by = "track")
best_tt_sec <- best_tt |> 
  mutate(across(starts_with("time"), ~ period_to_seconds(.)))

gg_wr <- ggplot() +
  geom_point(
    data = all_tt_sec |> anti_join(best_tt_sec), 
    aes(y = track, x = time_pr, text = label_pr), 
    color = "grey40", position = position_jitter()) +
  geom_point(data = best_tt_sec, aes(y = track, x = time_pr, text = label_pr), color = "gold") +
  # geom_violin(
  #   data = all_tt_sec, 
  #   aes(x = track, y = time_pr, fill = sd, colour = sd), 
  #   draw_quantiles = 0.5, scale = "width", alpha = 0.7) +
  geom_text(
    data = all_tt_sec, 
    # aes(x = track, y = time_wr, text = label_wr), 
    aes(y = track, x = time_wr, text = label_wr), 
    label = emoji("trophy"), family = "EmojiOne", size = 3) +
  # scale_y_time() +
  scale_x_time() +
  theme_minimal() +
  theme(
    axis.text = element_text(color = "white"),
    # axis.text.x = element_text(angle = 45, hjust = 0.98, vjust = .9),
    plot.background = element_rect(fill = NA),
    panel.background = element_rect(fill = NA),
    panel.grid = element_line(linewidth = 0.2, color = "grey40")
  ) +
  labs(
    x = "",
    y = ""
  )

ggplotly(gg_wr, tooltip = "text") |> config(displayModeBar = FALSE)
```

## col 3 {width="20%"}

::: {.card title="most popular wr combos"}
```{r}
most_popular_combo <- wr |> mutate(character = str_remove(character, " \\(.*\\)$")) |> count(character, kart) |> arrange(desc(n))

# most_popular_combo |> knitr::kable()

reactable(most_popular_combo,
  striped = TRUE, highlight = TRUE, wrap = FALSE,
  compact = TRUE,
  pagination = FALSE,
  # paginationType = "simple", defaultPageSize = 20,
  )
```
:::